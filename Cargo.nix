# Generated by carnix 0.9.8: carnix generate-nix --src .
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
rec {
  crates = cratesIO // rec {
# rs-nix-test-0.1.0

    crates.rs_nix_test."0.1.0" = deps: { features?(features_.rs_nix_test."0.1.0" deps {}) }: buildRustCrate {
      crateName = "rs-nix-test";
      version = "0.1.0";
      authors = [ "tobias pflug <tobias.pflug@gmail.com>" ];
      edition = "2018";
      src = exclude [ ".git" "target" ] ./.;
      dependencies = mapFeatures features ([
        (cratesIO.crates."rand"."${deps."rs_nix_test"."0.1.0"."rand"}" deps)
      ]);
    };
    features_.rs_nix_test."0.1.0" = deps: f: updateFeatures f (rec {
      rand."${deps.rs_nix_test."0.1.0".rand}".default = true;
      rs_nix_test."0.1.0".default = (f.rs_nix_test."0.1.0".default or true);
    }) [
      (cratesIO.features_.rand."${deps."rs_nix_test"."0.1.0"."rand"}" deps)
    ];


# end

  };

  rs_nix_test = crates.crates.rs_nix_test."0.1.0" deps;
  __all = [ (rs_nix_test {}) ];
  deps.c2_chacha."0.2.2" = {
    lazy_static = "1.4.0";
    ppv_lite86 = "0.2.5";
  };
  deps.cfg_if."0.1.9" = {};
  deps.getrandom."0.1.11" = {
    cfg_if = "0.1.9";
    libc = "0.2.62";
    wasi = "0.5.0";
  };
  deps.lazy_static."1.4.0" = {};
  deps.libc."0.2.62" = {};
  deps.ppv_lite86."0.2.5" = {};
  deps.rand."0.7.0" = {
    rand_core = "0.5.1";
    rand_chacha = "0.2.1";
    rand_hc = "0.2.0";
    libc = "0.2.62";
  };
  deps.rand_chacha."0.2.1" = {
    c2_chacha = "0.2.2";
    rand_core = "0.5.1";
  };
  deps.rand_core."0.5.1" = {
    getrandom = "0.1.11";
  };
  deps.rand_hc."0.2.0" = {
    rand_core = "0.5.1";
  };
  deps.rs_nix_test."0.1.0" = {
    rand = "0.7.0";
  };
  deps.wasi."0.5.0" = {};
}
